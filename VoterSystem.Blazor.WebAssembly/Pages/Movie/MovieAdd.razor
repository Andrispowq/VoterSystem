@page "/movies/add"
@using ELTE.Cinema.Blazor.WebAssembly.Config
@using ELTE.Cinema.Blazor.WebAssembly.Services
@using ELTE.Cinema.Blazor.WebAssembly.ViewModels
@inject NavigationManager NavigationManager
@inject IMovieService MovieService
@inject AppConfig AppConfig

<h1>Create new Movie</h1>

<EditForm Model="_movie" OnValidSubmit="SaveMovieAsync">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="title" class="form-label">Title:</label>
        <InputText id="title" @bind-Value="_movie.Title" class="form-control" />
        <ValidationMessage For="@(() => _movie.Title)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="year" class="form-label">Year:</label>
        <InputNumber id="year" @bind-Value="_movie.Year" class="form-control" />
        <ValidationMessage For="@(() => _movie.Year)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="director" class="form-label">Director:</label>
        <InputText id="director" @bind-Value="_movie.Director" class="form-control" />
        <ValidationMessage For="@(() => _movie.Director)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="synopsis" class="form-label">Synopsis:</label>
        <InputTextArea id="synopsis" @bind-Value="_movie.Synopsis" class="form-control" rows="3" />
        <ValidationMessage For="@(() => _movie.Synopsis)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="length" class="form-label">Length (minutes):</label>
        <InputNumber id="length" @bind-Value="_movie.Length" class="form-control" />
        <ValidationMessage For="@(() => _movie.Length)" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="image" class="form-label">Movie Image:</label>
        <InputFile id="image" OnChange="OnImageSelected" class="@GetFileInputClass()" />
        @if (!_uploadedFileHasSizeError)
        {
            @if (_movie.Image is { Length: > 0 })
            {
                <div class="mt-2">
                    <img src="data:image/png;base64,@Convert.ToBase64String(_movie.Image)" alt="Movie Image" class="img-thumbnail" style="width: 150px; height: auto;" />
                </div>
            }
        }
        else
        {
            <div class="text-danger">Maximum file size: @AppConfig.MaximumFileSizeInMb Mb</div>
        }
        <ValidationMessage For="@(() => _movie.Image)" class="text-danger" />


    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>


@code {
    private readonly MovieViewModel _movie = new();
    private bool _uploadedFileHasSizeError = false;

    private async Task OnImageSelected(InputFileChangeEventArgs e)
    {
        var maximumFileSizeInByte = AppConfig.MaximumFileSizeInMb * 1024 * 1024;
        var file = e.File;

        _uploadedFileHasSizeError = file.Size > maximumFileSizeInByte;
        if (_uploadedFileHasSizeError)
            return;

        using var stream = new MemoryStream();
        await file.OpenReadStream(maximumFileSizeInByte).CopyToAsync(stream);
        _movie.Image = stream.ToArray();

    }

    private async Task SaveMovieAsync()
    {
        await MovieService.CreateMovieAsync(_movie);
        NavigationManager.NavigateTo("/movies");
    }

    private string GetFileInputClass()
    {
        return _uploadedFileHasSizeError ? "form-control invalid" : "form-control";
    }
}